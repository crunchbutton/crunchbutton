"use strict";angular.module("angular-gestures",[]);var HGESTURES={hmDoubleTap:"doubletap",hmDragstart:"panstart",hmDrag:"pan",hmDragUp:"panup",hmDragDown:"pandown",hmDragLeft:"panleft",hmDragRight:"panright",hmDragend:"panend",hmPanstart:"panstart",hmPan:"pan",hmPanUp:"panup",hmPanDown:"pandown",hmPanLeft:"panleft",hmPanRight:"panright",hmPanend:"panend",hmHold:"press",hmPinch:"pinch",hmPinchIn:"pinchin",hmPinchOut:"pinchout",hmPress:"press",hmRelease:"release",hmRotate:"rotate",hmSwipe:"swipe",hmSwipeUp:"swipeup",hmSwipeDown:"swipedown",hmSwipeLeft:"swipeleft",hmSwipeRight:"swiperight",hmTap:"tap",hmTouch:"touch",hmTransformstart:"transformstart",hmTransform:"transform",hmTransformend:"transformend"},VERBOSE=!1;angular.forEach(HGESTURES,function(a,b){angular.module("angular-gestures").directive(b,["$parse","$log","$timeout","hammerDefaultOpts",function(c,d,e,f){return function(e,g,h){var i;h.$observe(b,function(j){var k=c(j),l=c(h[b+"Opts"])(e,{}),m=angular.copy(f);angular.extend(m,l),angular.isUndefined(g.hammertime)&&(g.hammer=new Hammer.Manager(g[0],m),e.$on("$destroy",function(){g.hammer.off(a),g.hammer.destroy()})),i=function(b){VERBOSE&&d.debug("angular-gestures: ",a,b);var c=function(){var a=k(e,{$event:b});"function"==typeof a&&a.call(e,b)};"$apply"===e.$root.$$phase||"$digest"===e.$root.$$phase?c():e.$apply(c)},g.hammer.on(a,i)})}}])}),angular.module("angular-gestures").provider("hammerDefaultOpts",function(){var a={};this.set=function(b){a=b},this.$get=function(){return a}});